// Code generated by goctl. DO NOT EDIT!
// Source: ws.proto

package server

import (
	"context"

	"backend/service/im/cmd/rpc/internal/logic"
	"backend/service/im/cmd/rpc/internal/svc"
	"backend/service/im/cmd/rpc/pb"
)

type WsServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedWsServer
}

func NewWsServer(svcCtx *svc.ServiceContext) *WsServer {
	return &WsServer{
		svcCtx: svcCtx,
	}
}

// 返送单条消息
func (s *WsServer) PushSingleMsg(ctx context.Context, in *pb.PushRoomMsgRequest) (*pb.SuccessReply, error) {
	l := logic.NewPushSingleMsgLogic(ctx, s.svcCtx)
	return l.PushSingleMsg(in)
}

func (s *WsServer) Connect(ctx context.Context, in *pb.ConnectRequest) (*pb.ConnectReply, error) {
	l := logic.NewConnectLogic(ctx, s.svcCtx)
	return l.Connect(in)
}

func (s *WsServer) DisConnect(ctx context.Context, in *pb.DisConnectRequest) (*pb.DisConnectReply, error) {
	l := logic.NewDisConnectLogic(ctx, s.svcCtx)
	return l.DisConnect(in)
}
