// Code generated by goctl. DO NOT EDIT!
// Source: logic.proto

package logics

import (
	"context"

	"backend/service/im/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	LGSuccessReply = pb.LGSuccessReply
	Send           = pb.Send

	Logics interface {
		// 返送单条消息
		Push(ctx context.Context, in *Send, opts ...grpc.CallOption) (*LGSuccessReply, error)
	}

	defaultLogics struct {
		cli zrpc.Client
	}
)

func NewLogics(cli zrpc.Client) Logics {
	return &defaultLogics{
		cli: cli,
	}
}

// 返送单条消息
func (m *defaultLogics) Push(ctx context.Context, in *Send, opts ...grpc.CallOption) (*LGSuccessReply, error) {
	client := pb.NewLogicsClient(m.cli.Conn())
	return client.Push(ctx, in, opts...)
}
