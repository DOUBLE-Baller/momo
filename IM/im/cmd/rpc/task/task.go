// Code generated by goctl. DO NOT EDIT!
// Source: task.proto

package task

import (
	"context"

	"backend/service/im/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	KqMsg            = pb.KqMsg
	KqRoomCountMsg   = pb.KqRoomCountMsg
	KqRoomInfo       = pb.KqRoomInfo
	TaskSend         = pb.TaskSend
	TaskSuccessReply = pb.TaskSuccessReply

	Task interface {
		// 返送单条消息
		PushSingleToConnect(ctx context.Context, in *TaskSend, opts ...grpc.CallOption) (*TaskSuccessReply, error)
	}

	defaultTask struct {
		cli zrpc.Client
	}
)

func NewTask(cli zrpc.Client) Task {
	return &defaultTask{
		cli: cli,
	}
}

// 返送单条消息
func (m *defaultTask) PushSingleToConnect(ctx context.Context, in *TaskSend, opts ...grpc.CallOption) (*TaskSuccessReply, error) {
	client := pb.NewTaskClient(m.cli.Conn())
	return client.PushSingleToConnect(ctx, in, opts...)
}
